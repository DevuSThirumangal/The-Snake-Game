# import required modules
import turtle
import time
import random

delay = 0.1
score = 0
high_score = 0


# Creating a window screen for the game
window = turtle.Screen()
window.title("The Snake Game")
window.bgcolor("black")
# the width and height being inputed as user's choice
window.setup(width=500, height=500)
window.tracer(0)

# The head of the snake
snake_head = turtle.Turtle()
snake_head.shape("square")
snake_head.color("Yellow")
snake_head.penup()
snake_head.goto(0, 0)
snake_head.direction = "Stop"

# food for the snake
food = turtle.Turtle()
colors = random.choice(['red', 'green', 'yellow'])
shapes = random.choice(['square', 'triangle', 'circle'])
food.speed(0)
food.shape(shapes)
food.color(colors)
food.penup()
food.goto(0, 200)

pen = turtle.Turtle()
pen.speed(0)
pen.shape("square")
pen.color("white")
pen.penup()
pen.hideturtle()
pen.goto(0, 250)
pen.write("Score : 0 High Score : 0", align="center",
		font=("candara", 20, "bold"))


# assigning the key directions
def group():
	if snake_head.direction != "down":
		snake_head.direction = "up"


def godown():
	if snake_head.direction != "up":
		snake_head.direction = "down"


def goleft():
	if snake_head.direction != "right":
		snake_head.direction = "left"


def goright():
	if snake_head.direction != "left":
		snake_head.direction = "right"


def move():
	if snake_head.direction == "up":
		y = snake_head.ycor()
		snake_head.sety(y+20)
	if snake_head.direction == "down":
		y = snake_head.ycor()
		snake_head.sety(y-20)
	if snake_head.direction == "left":
		x = snake_head.xcor()
		snake_head.setx(x-20)
	if snake_head.direction == "right":
		x = snake_head.xcor()
		snake_head.setx(x+20)


window.listen()
window.onkeypress(group, "Up")
window.onkeypress(godown, "Down")
window.onkeypress(goleft, "Left")
window.onkeypress(goright, "Right")

segments = []


# Main Game
while True:
	window.update()
	if snake_head.xcor() > 290 or snake_head.xcor() < -290 or snake_head.ycor() > 290 or snake_head.ycor() < -290:
		time.sleep(1)
		snake_head.goto(0, 0)
		snake_head.direction = "Stop"
		colors = random.choice(['red', 'blue', 'green'])
		shapes = random.choice(['square', 'circle'])
		for segment in segments:
			segment.goto(1000, 1000)
		segments.clear()
		score = 0
		delay = 0.1
		pen.clear()
		pen.write("Score : {} High Score : {} ".format(
			score, high_score), align="center", font=("candara", 24, "bold"))
	if snake_head.distance(food) < 20:
		x = random.randint(-270, 270)
		y = random.randint(-270, 270)
		food.goto(x, y)

		# Adding segment
		new_segment = turtle.Turtle()
		new_segment.speed(0)
		new_segment.shape("square")
		new_segment.color("blue") # colour of the tail
		new_segment.penup()
		segments.append(new_segment)
		delay -= 0.001
		score += 10
		if score > high_score:
			high_score = score
		pen.clear()
		pen.write("Score : {} High Score : {} ".format(
			score, high_score), align="center", font=("candara", 24, "bold"))
        
	# Checking for snake_head collisions with body segments
	for index in range(len(segments)-1, 0, -1):
		x = segments[index-1].xcor()
		y = segments[index-1].ycor()
		segments[index].goto(x, y)
	if len(segments) > 0:
		x = snake_head.xcor()
		y = snake_head.ycor()
		segments[0].goto(x, y)
	move()
	for segment in segments:
		if segment.distance(snake_head) < 20:
			time.sleep(1)
			snake_head.goto(0, 0)
			snake_head.direction = "stop"
			colors = random.choice(['red', 'blue', 'green'])
			shapes = random.choice(['square', 'circle'])
			for segment in segments:
				segment.goto(1000, 1000)
			segment.clear()

			score = 0
			delay = 0.1
			pen.clear()
			pen.write("Score : {} High Score : {} ".format(
				score, high_score), align="center", font=("candara", 20, "bold"))
	time.sleep(delay)

window.mainloop()
